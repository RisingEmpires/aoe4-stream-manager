{"version":3,"file":"client_registration.js","mappings":"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","sources":["webpack://nodecg/./src/client/instance/client_registration.ts"],"sourcesContent":["(function () {\n\t'use strict';\n\n\tconst { nodecg } = globalThis;\n\tconst timestamp = Date.now();\n\tlet { pathname } = globalThis.location;\n\n\t// If the pathname ends with /bundleName/ then we must be on index.html.\n\tif (pathname.endsWith(`/${nodecg.bundleName}/graphics/`)) {\n\t\tpathname += 'index.html';\n\t}\n\n\t/* istanbul ignore next: cant cover navigates page */\n\tglobalThis.socket.on('graphic:kill', (instance) => {\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (instance.socketId === globalThis.socket.id) {\n\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\tglobalThis.location.href = '/instance/killed.html?pathname=' + pathname;\n\t\t}\n\t});\n\n\t/* istanbul ignore next: cant cover navigates page */\n\tglobalThis.socket.on('graphic:refresh', (instance) => {\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (instance.socketId === globalThis.socket.id) {\n\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\tglobalThis.location.reload();\n\t\t}\n\t});\n\n\t/* istanbul ignore next: cant cover navigates page */\n\tglobalThis.socket.on('graphic:refreshAll', (graphic) => {\n\t\tif (!graphic) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (graphic.url === pathname) {\n\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\tglobalThis.location.reload();\n\t\t}\n\t});\n\n\t/* istanbul ignore next: cant cover navigates page */\n\tglobalThis.socket.on('graphic:bundleRefresh', (bundleName) => {\n\t\tif (!bundleName) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (bundleName === nodecg.bundleName) {\n\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\tglobalThis.location.reload();\n\t\t}\n\t});\n\n\t// On page load, register this socket with its URL pathname, so that the server can keep track of it.\n\t// In single-instance graphics, this registration will be rejected if the graphic is already open elsewhere.\n\tregister();\n\t/* istanbul ignore next: hard to test reconnection stuff right now */\n\tglobalThis.socket.io.on('reconnect', () => {\n\t\tregister();\n\t});\n\n\tglobalThis.socket.on('disconnect', (reason) => {\n\t\tif (reason === 'io server disconnect') {\n\t\t\t// The server forcibly closed the socket.\n\t\t\t// In this case, the client won't automatically reconnect.\n\t\t\t// So, we manually do it here:\n\t\t\tsocket.connect();\n\t\t} else {\n\t\t\tconsole.log('Socket disconnect reason:', reason);\n\t\t}\n\t});\n\n\tfunction register(): void {\n\t\tglobalThis.socket.emit(\n\t\t\t'graphic:registerSocket',\n\t\t\t{\n\t\t\t\ttimestamp,\n\t\t\t\tpathName: pathname,\n\t\t\t\tbundleName: nodecg.bundleName,\n\t\t\t\tbundleVersion: nodecg.bundleVersion,\n\t\t\t\tbundleGit: nodecg.bundleGit,\n\t\t\t},\n\t\t\t(_error, accepted) => {\n\t\t\t\t/* istanbul ignore if: cant cover navigates page */\n\t\t\t\tif (accepted) {\n\t\t\t\t\t// This event and window boolean are ONLY used for tests.\n\t\t\t\t\t// Kinda gross, sorry.\n\t\t\t\t\twindow.dispatchEvent(new CustomEvent('nodecg-registration-accepted'));\n\t\t\t\t\t(window as any).__nodecgRegistrationAccepted__ = true;\n\t\t\t\t} else {\n\t\t\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\t\t\tglobalThis.location.href = '/instance/busy.html?pathname=' + pathname;\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n})();\n"],"names":[],"sourceRoot":""}